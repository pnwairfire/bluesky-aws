#!/usr/bin/env nodejs

const commander = require('commander');
const s3 = require('../lib/s3')

function parseArgs () {
    commander
        .version('0.0.1', '-v, --version')
        .usage('[OPTIONS]...')
        .requiredOption('-f, --file <input|bluesky-aws-config|bluesky-config>', 'which file to get')
        .requiredOption('-c, --file-cache-root-dir <bucket>', 'file cache root dir')
        .requiredOption('-b, --bucket <bucket>', 's3 bucket')
        .requiredOption('-r, --request <requestId>', 'emissions-request-20200114')
        .option('-i, --json-indent <indent>', 'e.g. 4', (v) => parseInt(v))
        .parse(process.argv);
}

//async function go(){
function go() {
    let func = null;
    if (commander.file == 'input') {
        func = s3.getRequestInput
    } else if (commander.file == 'bluesky-aws-config') {
        func = s3.getBlueskyAwsConfig
    } else if (commander.file == 'bluesky-config') {
        func = s3.getBlueskyConfig
    } else {
        throw("Invalid file: " + commander.file)
    }
    func(commander.fileCacheRootDir,
            commander.bucket, commander.request)
        .then(file => {
            let contents = Buffer.from(file.contents,
                'base64').toString('ascii')

            console.log('contents: \n' +
                JSON.stringify(JSON.parse(contents), null, commander.jsonIndent));
        })
        .catch(err => {
            console.log(err.stack)
            console.log('Failed to get request input: ' + err);
        });
}

parseArgs()
go()
