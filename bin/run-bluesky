#!/usr/bin/env python3

import asyncio
import logging
import os
import sys

import afscripting


##
## Args
##

REQUIRED_ARGS = [
    {'short': '-i', 'long': '--input', 'help': "input file or url"}
]

OPTIONAL_ARGS = [
    {
        'long': '--instance',
        'dest': 'instances',
        'action': 'append',
        'default': [],
        'help': 'name or id of existing instance use for single bluesky run'
    }
]

EXAMPLES_STRING = """
Examples:

    {script} --log-level INFO -i ./dev/data/3-fires.json \\
        -c ./dev/config/simple-config.json

    {script} --log-level INFO -i ./dev/data/3-fires.json \\
        --instance bluesky-v4.1.33-test \\
        -c ./dev/config/simple-config.json

 """.format(script=sys.argv[0])

def parse_args():
    _, args = afscripting.args.parse_args(REQUIRED_ARGS,
        OPTIONAL_ARGS, epilog=EXAMPLES_STRING,
        support_configuration_options_short_names=True)

    return args

def inline_imports():
    """Imports aws and blueskyaws packages inline in order to support
    the '-h'/'--help' option without needing an aws credentials file.
    """
    global get_config, Instance, blueskyaws

    from afaws.scripting import get_config
    from afaws.ec2.resources import Instance
    try:
        import blueskyaws
    except:
        sys.path.insert(0, os.path.abspath(os.path.join(sys.path[0], '../')))
        import blueskyaws

async def main():
    args = parse_args()

    inline_imports()

    config = get_config(args)
    instances = [await Instance(i) for i in args.instances]
    runner = blueskyaws.BlueskyParallelRunner(instances=instances, **config)
    await runner.run(args.input)

if __name__ == "__main__":
    asyncio.run(main())
